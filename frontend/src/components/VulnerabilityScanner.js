import React, { useState } from 'react';

const VulnerabilityScanner = () => {
  const [token, setToken] = useState('');
  const [results, setResults] = useState(null);
  
  const handleTokenChange = (e) => {
    setToken(e.target.value);
  };
  
  const scanToken = async () => {
    try {
      const response = await fetch('http://localhost:8000/vulnerabilities', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ token }),
      });
      
      const data = await response.json();
      setResults(data);
    } catch (error) {
      console.error('Error scanning token:', error);
      setResults({ error: error.message });
    }
  };
  
  return (
    <div className="vulnerability-scanner">
      <h2>Vulnerability Scanner</h2>
      <div className="scanner-input">
        <textarea 
          value={token}
          onChange={handleTokenChange}
          placeholder="Paste your JWT token here..."
          rows={5}
        />
        <button onClick={scanToken}>Scan for Vulnerabilities</button>
      </div>
      
      {results && (
        <div className="scanner-results">
          {results.error ? (
            <div className="error">{results.error}</div>
          ) : (
            <>
              <h3>Scan Results</h3>
              {results.vulnerabilities && results.vulnerabilities.length > 0 ? (
                <div className="vulnerabilities-list">
                  {results.vulnerabilities.map((vuln, index) => (
                    <div key={index} className={`vulnerability-item ${vuln.severity}`}>
                      <h4>{vuln.issue}</h4>
                      <p>{vuln.description}</p>
                      <span className="severity-badge">{vuln.severity}</span>
                    </div>
                  ))}
                </div>
              ) : (
                <p>No vulnerabilities found</p>
              )}
              
              {results.recommendations && (
                <div className="recommendations">
                  <h3>Recommendations</h3>
                  <ul>
                    {results.recommendations.map((rec, index) => (
                      <li key={index}>{rec}</li>
                    ))}
                  </ul>
                </div>
              )}
            </>
          )}
        </div>
      )}
    </div>
  );
};

export default VulnerabilityScanner;
